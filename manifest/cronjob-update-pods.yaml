apiVersion: batch/v1
kind: CronJob
metadata:
  name: update-pods-md
  namespace: prod
spec:
  schedule: "0 */3 * * *"  # Run every 3 hour for more dynamic updates
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 3  # Limit retries to 3 attempts
      template:
        spec:
          containers:
          - name: update-pods
            image: bitnami/git:latest  # Changed to git-based image
            env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github-token-secret
                  key: GITHUB_TOKEN
            - name: GIT_USERNAME
              value: "zoonderkins"
            - name: GIT_EMAIL
              value: "git-ed@runbox.no"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            command:
            - /bin/bash
            - -c
            - |
              set -e
              
              # Install required tools 
              apt-get update && apt-get install -y curl jq
              
              # Install kubectl directly from Kubernetes
              echo "Installing kubectl..."
              KUBE_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
              curl -LO "https://dl.k8s.io/release/${KUBE_VERSION}/bin/linux/amd64/kubectl"
              chmod +x ./kubectl
              mv ./kubectl /usr/local/bin/kubectl
              
              # Verify kubectl installation
              kubectl version --client
              
              # Debug token - print first few characters (safely)
              echo "GitHub token length: ${#GITHUB_TOKEN}"
              echo "Token prefix: ${GITHUB_TOKEN:0:4}..."
              
              # Clone the repository
              echo "Cloning repository..."
              REPO_DIR="/tmp/repo"
              git clone "https://${GIT_USERNAME}:${GITHUB_TOKEN}@github.com/zoonderkins/edoo-k8s-demo-site.git" "${REPO_DIR}"
              
              # Configure git (inside repo directory)
              cd "${REPO_DIR}"
              git config --global user.email "${GIT_EMAIL}"
              git config --global user.name "${GIT_USERNAME}"
              
              # Create a simple update script directly in the script
              echo "Fetching pod information..."
              mkdir -p content static/api static/css static/js
              
              # Ensure custom directories exist and are not modified
              echo "Ensuring custom content directories..."
              mkdir -p static/css/custom static/js/custom
              
              # Create a .gitkeep file if the directories are empty
              touch static/css/custom/.gitkeep static/js/custom/.gitkeep
              
              # Get actual pod information
              echo "Getting pod information..."
              # Get pod data - Format: POD_NAME NAMESPACE STATUS NODE
              POD_INFO=$(kubectl get pods --all-namespaces -o=custom-columns=NAME:.metadata.name,NAMESPACE:.metadata.namespace,STATUS:.status.phase,NODE:.spec.nodeName --no-headers | sort -b -k2)
              
              # Calculate pod totals
              TOTAL_PODS=$(echo "$POD_INFO" | wc -l | tr -d ' ')
              RUNNING_PODS=$(echo "$POD_INFO" | grep -c "Running" || echo "0")
              CURRENT_DATE=$(date -Iseconds)
              
              # Get current pod's worker node
              WORKER_NODE=$(kubectl get pod -o jsonpath="{.spec.nodeName}" -n ${POD_NAMESPACE} ${HOSTNAME} 2>/dev/null || echo "unknown-worker")
              echo "Current worker node: ${WORKER_NODE}"
              
              # Get GitHub commit hash - use webhook SHA if available or current git hash
              if [ -n "${GITHUB_SHA}" ]; then
                GIT_HASH="${GITHUB_SHA:0:7}"
              else
                GIT_HASH=$(git rev-parse --short HEAD)
              fi
              
              # Format date in CST timezone instead of UTC
              # First make sure the tzdata package is installed
              if ! dpkg -l | grep -q tzdata; then
                apt-get update && apt-get install -y tzdata
              fi
              
              # Set timezone to CST and format date - force update with current time
              export TZ="America/Chicago"
              FORMATTED_DATE=$(date "+%Y-%m-%d %H:%M:%S CST")
              
              # Update _index.md directly with pod data instead of creating a separate pods.md
              if [ -f "content/_index.md" ]; then
                echo "Updating content in _index.md..."
                
                # Create a completely clean version of the file to work with
                TMP_INDEX="/tmp/clean_index.md"
                
                # Extract frontmatter (everything from start until the second ---)
                sed -n '1,/^---$/p' content/_index.md > "${TMP_INDEX}"
                
                # Update date field in frontmatter
                sed -i "s/^date: .*$/date: ${CURRENT_DATE}/" "${TMP_INDEX}"
                
                # Add a blank line after frontmatter
                echo "" >> "${TMP_INDEX}"
                
                # Add the main title and header content
                echo "# K8s Production Cluster" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                echo "<div class=\"container\">" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                echo "<div class=\"node-info\">" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                echo "Worker node: <strong id=\"worker-node-name\">${WORKER_NODE}</strong><br>" >> "${TMP_INDEX}"
                echo "<span style=\"color: green\">Cluster Status: <strong id=\"index-cluster-status\">Healthy</strong>" >> "${TMP_INDEX}"
                echo "<br>" >> "${TMP_INDEX}"
                echo "Total Pods: <strong id=\"index-total-pods\">${TOTAL_PODS}</strong>" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                echo "Repository: <a href=\"https://github.com/zoonderkins/edoo-k8s-demo-site\" target=\"_blank\">https://github.com/zoonderkins/edoo-k8s-demo-site</a>" >> "${TMP_INDEX}"
                echo "</div>" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                
                # Add last update section with current timestamp and git hash
                echo "<div class=\"last-update\">" >> "${TMP_INDEX}"
                echo "Last update: <span id=\"last-update-time\">${FORMATTED_DATE}</span><br>" >> "${TMP_INDEX}"
                echo "Hash: <span class=\"commit-hash\" id=\"git-commit-hash\">${GIT_HASH}</span>" >> "${TMP_INDEX}"
                echo "</div>" >> "${TMP_INDEX}"
                echo "" >> "${TMP_INDEX}"
                
                # Add the kubernetes pods section header
                echo "### Kubernetes Pods" >> "${TMP_INDEX}"
                echo "<div class=\"table-container\">" >> "${TMP_INDEX}"
                
                # Add ONLY ONE table tag - this is the key fix
                echo '<table class="pod-table" id="summary-table">' >> "${TMP_INDEX}"
                echo '  <thead>' >> "${TMP_INDEX}"
                echo '      <tr>' >> "${TMP_INDEX}"
                echo '          <th>Pod Name</th>' >> "${TMP_INDEX}"
                echo '          <th>Namespace</th>' >> "${TMP_INDEX}"
                echo '          <th>Status</th>' >> "${TMP_INDEX}"
                echo '          <th>Node</th>' >> "${TMP_INDEX}"
                echo '      </tr>' >> "${TMP_INDEX}"
                echo '  </thead>' >> "${TMP_INDEX}"
                echo '  <tbody>' >> "${TMP_INDEX}"
                
                # Add pod data from POD_INFO - use a temporary file to avoid subshell issues
                echo "$POD_INFO" > /tmp/pod_data.txt
                while read -r POD_NAME NAMESPACE STATUS NODE; do
                  # Skip empty lines
                  [ -z "$POD_NAME" ] && continue
                  
                  echo "      <tr>" >> "${TMP_INDEX}"
                  echo "          <td>${POD_NAME}</td>" >> "${TMP_INDEX}"
                  echo "          <td>${NAMESPACE}</td>" >> "${TMP_INDEX}"
                  
                  # Add status with appropriate class
                  if [[ "$STATUS" == "Running" ]]; then
                    echo "          <td class=\"status-running\">${STATUS}</td>" >> "${TMP_INDEX}"
                  elif [[ "$STATUS" == "Pending" ]]; then
                    echo "          <td class=\"status-pending\">${STATUS}</td>" >> "${TMP_INDEX}"
                  elif [[ "$STATUS" == "Failed" || "$STATUS" == "Error" ]]; then
                    echo "          <td class=\"status-error\">${STATUS}</td>" >> "${TMP_INDEX}"
                  else
                    echo "          <td>${STATUS}</td>" >> "${TMP_INDEX}"
                  fi
                  
                  echo "          <td>${NODE}</td>" >> "${TMP_INDEX}"
                  echo "      </tr>" >> "${TMP_INDEX}"
                done < /tmp/pod_data.txt
                
                # Clean up temp file
                rm -f /tmp/pod_data.txt
                
                # Close the table
                echo '  </tbody>' >> "${TMP_INDEX}"
                echo '</table>' >> "${TMP_INDEX}"
                echo '</div>' >> "${TMP_INDEX}"
                echo '</div>' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                
                # Add the comprehensive responsive CSS styles
                echo '<style>' >> "${TMP_INDEX}"
                echo '/* Base styles */' >> "${TMP_INDEX}"
                echo '* { box-sizing: border-box; }' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo 'body {' >> "${TMP_INDEX}"
                echo '  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;' >> "${TMP_INDEX}"
                echo '  line-height: 1.6; margin: 0; padding: 20px; background-color: #f8f9fa;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.container {' >> "${TMP_INDEX}"
                echo '  max-width: 1200px; margin: 0 auto; background: white; padding: 20px;' >> "${TMP_INDEX}"
                echo '  border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo 'h1 { color: #2c3e50; margin-bottom: 20px; font-size: 2rem; text-align: center; }' >> "${TMP_INDEX}"
                echo 'h3 { color: #34495e; margin-top: 30px; margin-bottom: 15px; font-size: 1.5rem; }' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.node-info {' >> "${TMP_INDEX}"
                echo '  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);' >> "${TMP_INDEX}"
                echo '  color: white; padding: 20px; border-radius: 12px; margin-bottom: 20px;' >> "${TMP_INDEX}"
                echo '  box-shadow: 0 4px 15px rgba(0,0,0,0.1);' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.node-info a { color: #fff; text-decoration: underline; }' >> "${TMP_INDEX}"
                echo '.node-info a:hover { color: #e3f2fd; }' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.last-update {' >> "${TMP_INDEX}"
                echo '  background-color: #e8f5e8; border-left: 4px solid #28a745; padding: 15px;' >> "${TMP_INDEX}"
                echo '  margin: 20px 0; border-radius: 4px; font-size: 0.9em; color: #155724;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.commit-hash {' >> "${TMP_INDEX}"
                echo '  font-family: "Monaco", "Menlo", "Ubuntu Mono", monospace;' >> "${TMP_INDEX}"
                echo '  background-color: #f1f3f4; color: #d73a49; padding: 3px 6px;' >> "${TMP_INDEX}"
                echo '  border-radius: 4px; font-size: 0.85em; border: 1px solid #e1e4e8;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.table-container {' >> "${TMP_INDEX}"
                echo '  overflow-x: auto; margin: 20px 0; border-radius: 8px;' >> "${TMP_INDEX}"
                echo '  box-shadow: 0 2px 8px rgba(0,0,0,0.1);' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.pod-table {' >> "${TMP_INDEX}"
                echo '  width: 100%; border-collapse: collapse; margin: 0; background: white; min-width: 600px;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.pod-table th {' >> "${TMP_INDEX}"
                echo '  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;' >> "${TMP_INDEX}"
                echo '  padding: 15px 12px; text-align: left; font-weight: 600; font-size: 0.9rem;' >> "${TMP_INDEX}"
                echo '  text-transform: uppercase; letter-spacing: 0.5px; position: sticky; top: 0; z-index: 10;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.pod-table td {' >> "${TMP_INDEX}"
                echo '  padding: 12px; border-bottom: 1px solid #e9ecef; font-size: 0.85rem; vertical-align: middle;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.pod-table tbody tr { transition: background-color 0.2s ease; }' >> "${TMP_INDEX}"
                echo '.pod-table tbody tr:hover { background-color: #f8f9fa; transform: scale(1.001); }' >> "${TMP_INDEX}"
                echo '.pod-table tbody tr:nth-child(even) { background-color: #fafbfc; }' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.status-running {' >> "${TMP_INDEX}"
                echo '  color: #28a745; font-weight: 600; padding: 4px 8px; background-color: #d4edda;' >> "${TMP_INDEX}"
                echo '  border-radius: 12px; font-size: 0.8rem; display: inline-block;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.status-pending {' >> "${TMP_INDEX}"
                echo '  color: #856404; font-weight: 600; padding: 4px 8px; background-color: #fff3cd;' >> "${TMP_INDEX}"
                echo '  border-radius: 12px; font-size: 0.8rem; display: inline-block;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '.status-error {' >> "${TMP_INDEX}"
                echo '  color: #721c24; font-weight: 600; padding: 4px 8px; background-color: #f8d7da;' >> "${TMP_INDEX}"
                echo '  border-radius: 12px; font-size: 0.8rem; display: inline-block;' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '@media (max-width: 768px) {' >> "${TMP_INDEX}"
                echo '  body { padding: 10px; }' >> "${TMP_INDEX}"
                echo '  .container { padding: 15px; }' >> "${TMP_INDEX}"
                echo '  h1 { font-size: 1.5rem; }' >> "${TMP_INDEX}"
                echo '  h3 { font-size: 1.2rem; }' >> "${TMP_INDEX}"
                echo '  .node-info { padding: 15px; font-size: 0.9rem; }' >> "${TMP_INDEX}"
                echo '  .pod-table th, .pod-table td { padding: 8px 6px; font-size: 0.75rem; }' >> "${TMP_INDEX}"
                echo '  .pod-table th { font-size: 0.8rem; }' >> "${TMP_INDEX}"
                echo '  .pod-table td:first-child { word-break: break-word; max-width: 150px; }' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '' >> "${TMP_INDEX}"
                echo '@media (max-width: 480px) {' >> "${TMP_INDEX}"
                echo '  .pod-table { min-width: 500px; }' >> "${TMP_INDEX}"
                echo '  .pod-table th, .pod-table td { padding: 6px 4px; font-size: 0.7rem; }' >> "${TMP_INDEX}"
                echo '  .node-info { padding: 12px; font-size: 0.85rem; }' >> "${TMP_INDEX}"
                echo '  .last-update { padding: 12px; font-size: 0.8rem; }' >> "${TMP_INDEX}"
                echo '}' >> "${TMP_INDEX}"
                echo '</style>' >> "${TMP_INDEX}"
                
                # Replace the original file with our clean version
                cp "${TMP_INDEX}" content/_index.md
                
                # Clean up the temp file
                rm -f "${TMP_INDEX}"
              else
                # Create a basic _index.md file if it doesn't exist
                echo "---" > content/_index.md
                echo "title: \"Kubernetes Dashboard\"" >> content/_index.md
                echo "date: ${CURRENT_DATE}" >> content/_index.md
                echo "---" >> content/_index.md
                echo "" >> content/_index.md
                echo "# Kubernetes Pod Status" >> content/_index.md
                echo "" >> content/_index.md
                
                # Format date in CST timezone
                export TZ="America/Chicago"
                FORMATTED_DATE=$(date "+%Y-%m-%d %H:%M:%S CST")
                
                # Add node-info section with worker node
                echo "<div class=\"node-info\">" >> content/_index.md
                echo "<span style=\"color: green\">Cluster Status: <strong id=\"index-cluster-status\">Healthy</strong></span> | Total Pods: <strong id=\"index-total-pods\">${TOTAL_PODS}</strong>" >> content/_index.md
                echo "<div class=\"worker-node-info\">Current worker: <strong id=\"worker-node-name\">${WORKER_NODE}</strong></div>" >> content/_index.md
                echo "</div>" >> content/_index.md
                echo "" >> content/_index.md
                
                # Add last update section
                echo "<div class=\"last-update\">" >> content/_index.md
                echo "Last update: ${FORMATTED_DATE}<br>" >> content/_index.md
                echo "Hash: <span class=\"commit-hash\" id=\"git-commit-hash\">${GIT_HASH}</span>" >> content/_index.md
                echo "</div>" >> content/_index.md
                echo "" >> content/_index.md
                
                # Add the table for all pods
                echo "<h2>Kubernetes Pods</h2>" >> content/_index.md
                echo "" >> content/_index.md
                
                echo '<table class="pod-table" id="summary-table">' >> content/_index.md
                echo '  <thead>' >> content/_index.md
                echo '      <tr>' >> content/_index.md
                echo '          <th>Pod Name</th>' >> content/_index.md
                echo '          <th>Namespace</th>' >> content/_index.md
                echo '          <th>Status</th>' >> content/_index.md
                echo '          <th>Node</th>' >> content/_index.md
                echo '      </tr>' >> content/_index.md
                echo '  </thead>' >> content/_index.md
                echo '  <tbody>' >> content/_index.md
                
                # Add pod data from POD_INFO
                echo "$POD_INFO" | while read -r POD_NAME NAMESPACE STATUS NODE; do
                  echo "      <tr>" >> content/_index.md
                  echo "          <td>${POD_NAME}</td>" >> content/_index.md
                  echo "          <td>${NAMESPACE}</td>" >> content/_index.md
                  
                  # Add status with appropriate class
                  if [[ "$STATUS" == "Running" ]]; then
                    echo "          <td class=\"status-running\">${STATUS}</td>" >> content/_index.md
                  elif [[ "$STATUS" == "Pending" ]]; then
                    echo "          <td class=\"status-pending\">${STATUS}</td>" >> content/_index.md
                  elif [[ "$STATUS" == "Failed" || "$STATUS" == "Error" ]]; then
                    echo "          <td class=\"status-error\">${STATUS}</td>" >> content/_index.md
                  else
                    echo "          <td>${STATUS}</td>" >> content/_index.md
                  fi
                  
                  echo "          <td>${NODE}</td>" >> content/_index.md
                  echo "      </tr>" >> content/_index.md
                done
                
                # Close the table
                echo '  </tbody>' >> content/_index.md
                echo '</table>' >> content/_index.md
                
                # Add CSS for the dashboard
                echo "" >> content/_index.md
                echo "<style>" >> content/_index.md
                echo ".node-info {" >> content/_index.md
                echo "  background-color: #f8f9fa;" >> content/_index.md
                echo "  padding: 15px;" >> content/_index.md
                echo "  border-radius: 8px;" >> content/_index.md
                echo "  margin-bottom: 20px;" >> content/_index.md
                echo "  box-shadow: 0 2px 4px rgba(0,0,0,0.05);" >> content/_index.md
                echo "  position: relative;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".worker-node-info {" >> content/_index.md
                echo "  margin-top: 8px;" >> content/_index.md
                echo "  font-size: 0.9em;" >> content/_index.md
                echo "  color: #495057;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".pod-table {" >> content/_index.md
                echo "  width: 100%;" >> content/_index.md
                echo "  border-collapse: collapse;" >> content/_index.md
                echo "  margin-bottom: 30px;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".pod-table th {" >> content/_index.md
                echo "  background-color: #f8f9fa;" >> content/_index.md
                echo "  padding: 10px 15px;" >> content/_index.md
                echo "  text-align: left;" >> content/_index.md
                echo "  font-weight: 600;" >> content/_index.md
                echo "  border-bottom: 2px solid #dee2e6;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".pod-table td {" >> content/_index.md
                echo "  padding: 10px 15px;" >> content/_index.md
                echo "  border-bottom: 1px solid #e9ecef;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".pod-table tbody tr:hover {" >> content/_index.md
                echo "  background-color: #f8f9fa;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".status-running {" >> content/_index.md
                echo "  color: #28a745;" >> content/_index.md
                echo "  font-weight: 600;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".status-pending {" >> content/_index.md
                echo "  color: #ffc107;" >> content/_index.md
                echo "  font-weight: 600;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".status-error {" >> content/_index.md
                echo "  color: #dc3545;" >> content/_index.md
                echo "  font-weight: 600;" >> content/_index.md
                echo "}" >> content/_index.md
                echo ".last-update {" >> content/_index.md
                echo "  margin-top: 10px;" >> content/_index.md
                echo "  margin-bottom: 20px;" >> content/_index.md
                echo "  padding: 10px;" >> content/_index.md
                echo "  background-color: #f8f9fa;" >> content/_index.md
                echo "  border-radius: 4px;" >> content/_index.md
                echo "  font-size: 0.9em;" >> content/_index.md
                echo "  color: #6c757d;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "" >> content/_index.md
                echo ".commit-hash {" >> content/_index.md
                echo "  font-family: monospace;" >> content/_index.md
                echo "  background-color: #e9ecef;" >> content/_index.md
                echo "  padding: 2px 4px;" >> content/_index.md
                echo "  border-radius: 3px;" >> content/_index.md
                echo "}" >> content/_index.md
                echo "</style>" >> content/_index.md
              fi
              
              # Create JSON API with proper formatting
              echo "{" > static/api/cluster-status.json
              echo "  \"statistics\": {" >> static/api/cluster-status.json
              echo "    \"totalPods\": ${TOTAL_PODS}," >> static/api/cluster-status.json
              echo "    \"runningPods\": ${RUNNING_PODS}" >> static/api/cluster-status.json
              echo "  }" >> static/api/cluster-status.json
              echo "}" >> static/api/cluster-status.json
              
              # Stage all content updates
              echo "Staging content updates..."
              git add -A
              
              # Check if there are changes to commit
              if git diff --staged --quiet; then
                echo "No changes to commit"
              else
                echo "Committing content updates..."
                git commit -m "Automatic update of pod status at $(date -u)"
                
                # Update image tag in values.yaml
                if [ -f "charts/hugo-site/values.yaml" ]; then
                  echo "Updating values.yaml first to ensure correct tag reference..."
                  
                  # Create a temporary unique tag to update later
                  TEMP_TAG="temp-tag-$(date +%s)"
                  
                  # Update the values.yaml file with the temporary tag
                  sed "s/^  tag:.*$/  tag: $TEMP_TAG/" charts/hugo-site/values.yaml > /tmp/new_values.yaml
                  mv /tmp/new_values.yaml charts/hugo-site/values.yaml
                  
                  # Commit the temporary values.yaml change
                  git add charts/hugo-site/values.yaml
                  git commit -m "Temporary tag update for values.yaml"
                  
                  # Now get the final commit SHA - this will be the one GitHub Actions uses
                  FINAL_COMMIT_SHA=$(git rev-parse HEAD)
                  echo "Final commit SHA: ${FINAL_COMMIT_SHA}"
                  
                  # Update the git commit hash in the _index.md file if the element exists
                  if grep -q "id=\"git-commit-hash\"" content/_index.md; then
                    HASH_SHORT="${FINAL_COMMIT_SHA:0:7}"
                    sed "s/<span class=\"commit-hash\" id=\"git-commit-hash\">[^<]*<\/span>/<span class=\"commit-hash\" id=\"git-commit-hash\">$HASH_SHORT<\/span>/g" content/_index.md > /tmp/new_index.md
                    mv /tmp/new_index.md content/_index.md
                    git add content/_index.md
                  fi
                  
                  # Now update with the final SHA that GitHub Actions will use
                  sed "s/^  tag:.*$/  tag: $FINAL_COMMIT_SHA/" charts/hugo-site/values.yaml > /tmp/new_values.yaml
                  mv /tmp/new_values.yaml charts/hugo-site/values.yaml
                  
                  # Amend the commit to include the final SHA reference
                  git add charts/hugo-site/values.yaml
                  git commit --amend -m "Update image tag to match final commit SHA: ${FINAL_COMMIT_SHA}"
                  
                  echo "Values.yaml updated with final commit SHA: ${FINAL_COMMIT_SHA}"
                fi
                
                # Push all changes to repository
                echo "Pushing changes to repository..."
                git remote set-url origin "https://${GIT_USERNAME}:${GITHUB_TOKEN}@github.com/zoonderkins/edoo-k8s-demo-site.git"
                git push origin master --force
                echo "All changes pushed successfully"
                
                # Trigger ArgoCD sync after GitHub Actions has time to build
                echo "Waiting for GitHub Actions to build and push the new image (5 minutes)..."
                sleep 300
                
                echo "Triggering ArgoCD sync..."
                if command -v kubectl &> /dev/null; then
                  # Patch ArgoCD application to force sync
                  kubectl -n argocd patch application hugo-k8s-dashboard -p '{"spec":{"syncPolicy":{"automated":{"prune":true,"selfHeal":true}}}}' --type=merge || echo "Failed to patch via kubectl"
                  kubectl -n argocd patch application hugo-k8s-dashboard --type=json -p='[{"op": "replace", "path": "/metadata/annotations/argocd.argoproj.io~1sync-options", "value":"Force=true"}]' || echo "Failed to force sync via kubectl"
                  echo "ArgoCD sync triggered"
                else
                  echo "kubectl not available, skipping manual sync"
                fi
              fi
              
              echo "Pod information update process completed successfully"
          restartPolicy: OnFailure
          serviceAccountName: github-push
